6/4/2019 - 6/5/2019
-
-

6/6/2019 - 6/7/2019
- Installed Parrot OS / Virtual Box. Installed & running Windows10 virtual machine.
-

6/8/2019 - 6/9/2019
-Installed Pycharm on Windows / Linux sides.
-Installed Flask through PIP on both running OSs.
-Cloned Github repository and loaded/ran Zak's Flask App in Pycharm.

6/10/2019 - 6/11/2019
-Ran built-in Parrot application called OWASP ZAP attacking http://127.0.0.1:5000- zap and received several alerts such as ones for sql injection, application error disclosure, buffer overflow, x-fram-options header not set,  
web browser xss protection not enabled, x-content-type-options header missing. 
-Updated OWASP and installed addtional components. Re-scanned the connection and found new alerts. Exported findings into html file.
-Compared results with partners results from a different pentest on different webapp, found similarities in the alerts. The similarities we found were xss commonalities - low, x-content - low, x-fram options(clickjacking) med.
Researching fuzzing attacks.
Performed first fuzz attack using strings. -alerts found
------Scrum II 6/11/2019------


6/12/2019 - 6/13/2019

-Implemented fuzz test using string. 


6/14/2019 - 6/15/2019
- Working on Parrot building and fixing various componenets. Learning and researching commands and pentest strategies.
- Learning Linux commands.

6/16/2019 - 6/17/2019
- Implemented fuzz test on 127.0.0.1:5000 using an assortment of files, strings, numbers, and nulls. Results returned low alert status.
 - Exported scan and buzz attack to files and placed in our cloned repository. 
 - copied/fuzzed recommended string from https://github.com/minimaxir/big-list-of-naughty-strings.
 - logged findings Robin final report

------Scrum III & Presentation 6/18/2019------
