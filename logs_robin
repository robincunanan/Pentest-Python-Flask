6/4/2019 - 6/5/2019
- Created logs_robin and logs_gabe readme.md and branches.
- Downloaded VirtualBox and created 1 Virtual Machine (VM) with Parrot OS installed. 
- Potential ParrotOS applications to use: 
  - JoomScan 
  - Wapiti 
  - WhatWeb 
  - Xsser (Which is a automatic -framework- to detect, exploit and report XSS vulernabilites in web-based applications)
  - OWASP ZAP

6/6/2019 - 6/7/2019
- Discovered, Forked and tested Flask App from [XD-DENG](https://github.com/XD-DENG/flask-example) within the VM.
- Was able to login as admin and add users
- There is a public page, private (for personal users), and admin page (for creating new users)

6/8/2019 - 6/9/2019
- Ran the following ParrotOS applications for XD-DENG Flask app:
- JoomScan: Detected that there was no firewall. Was not able to find admin page, errog logs, and 
config files.
- xsser: Reported that the application is not vulnerable to cross site tracking. Was not able to perform url, xsr, 
xsa, and cookies attacks. Concluded that it was not able to find any vulnerability with 590 injections. 
- OWASP ZAP: (Risk medium) X-Frame-Options headers is not included in the HTTP response to protect against 'Clickjacking' attacks.
(Risk low) Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS'Proection' HTTP response header
on the web server. (Risk low) The Anti-MME-Sniffing headers X-Content-Type-Options was not set to 'nosniff'. This allows older verisons of Internet Explorer
and Chrome to perform MIME-sniffing on the response body, potentially causing the respones body to be inerpreted and displayed as a content type other than the declared content type.

6/10/2019 - 6/11/2019
-
-

------Scrum II 6/11/2019------

6/12/2019 - 6/13/2019
-
-

6/14/2019 - 6/15/2019
-
-

6/16/2019 - 6/17/2019
-
-

------Scrum III & Presentation 6/18/2019------
